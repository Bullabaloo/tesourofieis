<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"
  "http://www.w3.org/TR/html4/loose.dtd">
<html>
  <head>
    <title>exceptions.ProperNotFound: Proper `/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt` not found. // Werkzeug Debugger</title>
    <link rel="stylesheet" href="?__debugger__=yes&amp;cmd=resource&amp;f=style.css"
        type="text/css">
    <!-- We need to make sure this has a favicon so that the debugger does
         not by accident trigger a request to /favicon.ico which might
         change the application state. -->
    <link rel="shortcut icon"
        href="?__debugger__=yes&amp;cmd=resource&amp;f=console.png">
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=jquery.js"></script>
    <script src="?__debugger__=yes&amp;cmd=resource&amp;f=debugger.js"></script>
    <script type="text/javascript">
      var TRACEBACK = 4343726224,
          CONSOLE_MODE = false,
          EVALEX = true,
          EVALEX_TRUSTED = false,
          SECRET = "nD0fHD1VaqV6mGeAXIvw";
    </script>
  </head>
  <body style="background-color: #fff">
    <div class="debugger">
<h1>ProperNotFound</h1>
<div class="detail">
  <p class="errormsg">exceptions.ProperNotFound: Proper `/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt` not found.</p>
</div>
<h2 class="traceback">Traceback <em>(most recent call last)</em></h2>
<div class="traceback">
  
  <ul><li><div class="frame" id="frame-4347508560">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py"</cite>,
      line <em class="line">44</em>,
      in <code class="function">parse</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>self.translations[LANGUAGE_LATIN] = importlib.import_module(f'constants.{LANGUAGE_LATIN}.translation')</pre>
<pre class="line before"><span class="ws">        </span>self.prefaces[self.lang] = self._parse_source('Ordo/Prefationes.txt', self.lang)</pre>
<pre class="line before"><span class="ws">        </span>self.prefaces[LANGUAGE_LATIN] = self._parse_source('Ordo/Prefationes.txt', lang=LANGUAGE_LATIN)</pre>
<pre class="line before"><span class="ws">        </span>partial_path = self._get_partial_path()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line current"><span class="ws">            </span>proper_vernacular: Proper = self._parse_proper_source(partial_path, self.lang)</pre>
<pre class="line after"><span class="ws">            </span>proper_latin: Proper = self._parse_proper_source(partial_path, LANGUAGE_LATIN)</pre>
<pre class="line after"><span class="ws">        </span>except FileNotFoundError as e:</pre>
<pre class="line after"><span class="ws">            </span>raise ProperNotFound(f'Proper `{e.filename}` not found.')</pre>
<pre class="line after"><span class="ws">        </span>return proper_vernacular, proper_latin</pre>
<pre class="line after"><span class="ws"></span> </pre></div>
</div>

<li><div class="frame" id="frame-4347509584">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py"</cite>,
      line <em class="line">65</em>,
      in <code class="function">_parse_proper_source</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span># Reference in Rule section in 'vide' or 'ex' clause - load all sections</pre>
<pre class="line before"><span class="ws">        </span># from the referenced file and get sections that are not explicitly defined in the current proper.</pre>
<pre class="line before"><span class="ws">        </span>vide = proper.get_rule('vide')</pre>
<pre class="line before"><span class="ws">        </span>if vide:</pre>
<pre class="line before"><span class="ws">            </span>nested_path = self._get_full_path(f'{vide}.txt', lang)</pre>
<pre class="line current"><span class="ws">            </span>proper.merge(self._parse_source(nested_path, lang=lang))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span># Moving data from &quot;Comment&quot; section up as direct properties of a Proper object</pre>
<pre class="line after"><span class="ws">        </span>parsed_comment: dict = self._parse_comment(proper.pop_section('Comment'))</pre>
<pre class="line after"><span class="ws">        </span>proper.title = self.translations[lang].TITLES.get(self.proper_id)</pre>
<pre class="line after"><span class="ws">        </span>proper.description = parsed_comment['description']</pre></div>
</div>

<li><div class="frame" id="frame-4347509136">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py"</cite>,
      line <em class="line">94</em>,
      in <code class="function">_parse_source</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>parsed_source: ParsedSource = ParsedSource()</pre>
<pre class="line before"><span class="ws">        </span>section_name: str = None</pre>
<pre class="line before"><span class="ws">        </span>concat_line: bool = False</pre>
<pre class="line before"><span class="ws">        </span>full_path: str = self._get_full_path(partial_path, lang)</pre>
<pre class="line current"><span class="ws">        </span>with open(full_path) as fh:</pre>
<pre class="line after"><span class="ws">            </span>for itr, ln in enumerate(fh):</pre>
<pre class="line after"><span class="ws">                </span>ln = ln.strip()</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">                </span>if section_name is None and ln == '':</pre>
<pre class="line after"><span class="ws">                    </span># Skipping empty lines in the beginning of the file</pre></div>
</div>

<li><div class="exc-divider">During handling of the above exception, another exception occurred:</div>
<li><div class="frame" id="frame-4347509392">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2463</em>,
      in <code class="function">__call__</code></h4>
  <div class="source library"><pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def __call__(self, environ, start_response):</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;The WSGI server calls the Flask application object as the</pre>
<pre class="line before"><span class="ws">        </span>WSGI application. This calls :meth:`wsgi_app` which can be</pre>
<pre class="line before"><span class="ws">        </span>wrapped to applying middleware.&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>return self.wsgi_app(environ, start_response)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def __repr__(self):</pre>
<pre class="line after"><span class="ws">        </span>return &quot;&lt;%s %r&gt;&quot; % (self.__class__.__name__, self.name)</pre></div>
</div>

<li><div class="frame" id="frame-4347510096">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2449</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line before"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line before"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">                </span>error = e</pre>
<pre class="line current"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre>
<pre class="line after"><span class="ws">                </span>raise</pre>
<pre class="line after"><span class="ws">            </span>return response(environ, start_response)</pre>
<pre class="line after"><span class="ws">        </span>finally:</pre></div>
</div>

<li><div class="frame" id="frame-4347509712">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1866</em>,
      in <code class="function">handle_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span># if we want to repropagate the exception, we can attempt to</pre>
<pre class="line before"><span class="ws">            </span># raise it with the whole traceback in case we can do that</pre>
<pre class="line before"><span class="ws">            </span># (the function was actually called from the except part)</pre>
<pre class="line before"><span class="ws">            </span># otherwise, we just raise the error again</pre>
<pre class="line before"><span class="ws">            </span>if exc_value is e:</pre>
<pre class="line current"><span class="ws">                </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">            </span>else:</pre>
<pre class="line after"><span class="ws">                </span>raise e</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">        </span>self.log_exception((exc_type, exc_value, tb))</pre>
<pre class="line after"><span class="ws">        </span>server_error = InternalServerError()</pre></div>
</div>

<li><div class="frame" id="frame-4347509776">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-4347510288">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">2446</em>,
      in <code class="function">wsgi_app</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>ctx = self.request_context(environ)</pre>
<pre class="line before"><span class="ws">        </span>error = None</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>try:</pre>
<pre class="line before"><span class="ws">                </span>ctx.push()</pre>
<pre class="line current"><span class="ws">                </span>response = self.full_dispatch_request()</pre>
<pre class="line after"><span class="ws">            </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">                </span>error = e</pre>
<pre class="line after"><span class="ws">                </span>response = self.handle_exception(e)</pre>
<pre class="line after"><span class="ws">            </span>except:  # noqa: B001</pre>
<pre class="line after"><span class="ws">                </span>error = sys.exc_info()[1]</pre></div>
</div>

<li><div class="frame" id="frame-4347509008">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1951</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line before"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line before"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line current"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Given the return value from a view function this finalizes</pre>
<pre class="line after"><span class="ws">        </span>the request by converting it into a response and invoking the</pre></div>
</div>

<li><div class="frame" id="frame-4347510032">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1820</em>,
      in <code class="function">handle_user_exception</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>return self.handle_http_exception(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>handler = self._find_error_handler(e)</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">        </span>if handler is None:</pre>
<pre class="line current"><span class="ws">            </span>reraise(exc_type, exc_value, tb)</pre>
<pre class="line after"><span class="ws">        </span>return handler(e)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def handle_exception(self, e):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Handle an exception that did not have an error handler</pre>
<pre class="line after"><span class="ws">        </span>associated with it, or that was raised from an error handler.</pre></div>
</div>

<li><div class="frame" id="frame-4347510160">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py"</cite>,
      line <em class="line">39</em>,
      in <code class="function">reraise</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">    </span>import collections.abc as collections_abc</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def reraise(tp, value, tb=None):</pre>
<pre class="line before"><span class="ws">        </span>if value.__traceback__ is not tb:</pre>
<pre class="line before"><span class="ws">            </span>raise value.with_traceback(tb)</pre>
<pre class="line current"><span class="ws">        </span>raise value</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>implements_to_string = _identity</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>else:</pre>
<pre class="line after"><span class="ws">    </span>iterkeys = lambda d: d.iterkeys()</pre></div>
</div>

<li><div class="frame" id="frame-4347509904">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1949</em>,
      in <code class="function">full_dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">        </span>self.try_trigger_before_first_request_functions()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>request_started.send(self)</pre>
<pre class="line before"><span class="ws">            </span>rv = self.preprocess_request()</pre>
<pre class="line before"><span class="ws">            </span>if rv is None:</pre>
<pre class="line current"><span class="ws">                </span>rv = self.dispatch_request()</pre>
<pre class="line after"><span class="ws">        </span>except Exception as e:</pre>
<pre class="line after"><span class="ws">            </span>rv = self.handle_user_exception(e)</pre>
<pre class="line after"><span class="ws">        </span>return self.finalize_request(rv)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def finalize_request(self, rv, from_error_handler=False):</pre></div>
</div>

<li><div class="frame" id="frame-4347509968">
  <h4>File <cite class="filename">"/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py"</cite>,
      line <em class="line">1935</em>,
      in <code class="function">dispatch_request</code></h4>
  <div class="source library"><pre class="line before"><span class="ws">            </span>getattr(rule, &quot;provide_automatic_options&quot;, False)</pre>
<pre class="line before"><span class="ws">            </span>and req.method == &quot;OPTIONS&quot;</pre>
<pre class="line before"><span class="ws">        </span>):</pre>
<pre class="line before"><span class="ws">            </span>return self.make_default_options_response()</pre>
<pre class="line before"><span class="ws">        </span># otherwise dispatch to the handler for that endpoint</pre>
<pre class="line current"><span class="ws">        </span>return self.view_functions[rule.endpoint](**req.view_args)</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def full_dispatch_request(self):</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;Dispatches the request and on top of that performs request</pre>
<pre class="line after"><span class="ws">        </span>pre and postprocessing as well as HTTP exception catching and</pre>
<pre class="line after"><span class="ws">        </span>error handling.</pre></div>
</div>

<li><div class="frame" id="frame-4347509648">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/apiv2.py"</cite>,
      line <em class="line">38</em>,
      in <code class="function">v2_date</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>except ValueError:</pre>
<pre class="line before"><span class="ws">        </span>return jsonify({'error': str('Incorrect date format, should be %Y-%m-%d')}), 400</pre>
<pre class="line before"><span class="ws">    </span>except Exception as e:</pre>
<pre class="line before"><span class="ws">        </span>return jsonify({'error': str(e)}), 500</pre>
<pre class="line before"><span class="ws">    </span>else:</pre>
<pre class="line current"><span class="ws">        </span>return jsonify(format_propers(day))</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws"></span>@api.route('/api/v2/proper/&lt;string:proper_id&gt;')</pre>
<pre class="line after"><span class="ws"></span># @api.route('/&lt;string:lang&gt;/api/v2/proper/&lt;string:proper_id&gt;')</pre>
<pre class="line after"><span class="ws"></span>def v2_proper(proper_id: str, lang: str = LANGUAGE_VERNACULAR):</pre></div>
</div>

<li><div class="frame" id="frame-4347508048">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/utils.py"</cite>,
      line <em class="line">31</em>,
      in <code class="function">format_propers</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>raise</pre>
<pre class="line before"><span class="ws">    </span>return None</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws"></span>def format_propers(day: 'Day'):</pre>
<pre class="line current"><span class="ws">    </span>propers = day.get_proper()</pre>
<pre class="line after"><span class="ws">    </span>retvals = []</pre>
<pre class="line after"><span class="ws">    </span>for propers_vernacular, propers_latin in propers:</pre>
<pre class="line after"><span class="ws">        </span># In most of the cases calculate the celebration title from the Observance object falling on</pre>
<pre class="line after"><span class="ws">        </span># a given day; in case of days with multiple masses (02 Nov, 25 Dec) get the title from</pre>
<pre class="line after"><span class="ws">        </span># proper's comment directly</pre></div>
</div>

<li><div class="frame" id="frame-4347510672">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py"</cite>,
      line <em class="line">185</em>,
      in <code class="function">get_proper</code></h4>
  <div class="source "><pre class="line before"><span class="ws">    </span>def get_proper(self) -&gt; List[Tuple['Proper', 'Proper']]:</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line before"><span class="ws">        </span>Get proper that is used in today Mass. If given day does not have a dedicated proper,</pre>
<pre class="line before"><span class="ws">        </span>use the one from the latest Sunday.</pre>
<pre class="line before"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line current"><span class="ws">        </span>celebration_propers = self._calculate_proper(self.celebration)</pre>
<pre class="line after"><span class="ws">        </span>if self.commemoration:</pre>
<pre class="line after"><span class="ws">            </span>commemoration_propers = self._calculate_proper(self.commemoration)</pre>
<pre class="line after"><span class="ws">            </span>for celebration_proper in celebration_propers:</pre>
<pre class="line after"><span class="ws">                </span>for i in (0, 1):</pre>
<pre class="line after"><span class="ws">                    </span>celebration_proper[i].add_commemorations([j[i] for j in commemoration_propers])</pre></div>
</div>

<li><div class="frame" id="frame-4347509840">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py"</cite>,
      line <em class="line">210</em>,
      in <code class="function">_calculate_proper</code></h4>
  <div class="source "><pre class="line before"><span class="ws">            </span>retval: List[Tuple[Proper, Proper]] = []</pre>
<pre class="line before"><span class="ws">            </span>for observance in observances:</pre>
<pre class="line before"><span class="ws">                </span>inter_readings_section = self._infer_inter_reading_section(observance)</pre>
<pre class="line before"><span class="ws">                </span>inferred_prefaces = infer_custom_preface(observance, next(iter(self.tempora), None))</pre>
<pre class="line before"><span class="ws">                </span>proper_config = ProperConfig(preface=inferred_prefaces, inter_readings_section=inter_readings_section)</pre>
<pre class="line current"><span class="ws">                </span>retval.append(observance.get_proper(proper_config))</pre>
<pre class="line after"><span class="ws">            </span>return retval</pre>
<pre class="line after"><span class="ws">        </span>else:</pre>
<pre class="line after"><span class="ws">            </span># It's a feria day without its own proper for which the last Sunday's proper is used</pre>
<pre class="line after"><span class="ws">            </span>inferred_observances = self._infer_observance()</pre>
<pre class="line after"><span class="ws">            </span>if observances:</pre></div>
</div>

<li><div class="frame" id="frame-4343715408">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py"</cite>,
      line <em class="line">76</em>,
      in <code class="function">get_proper</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>else:</pre>
<pre class="line before"><span class="ws">            </span>self.weekday = self.date.weekday()</pre>
<pre class="line before"><span class="ws">        </span>self.priority = self._calc_priority()</pre>
<pre class="line before"><span class="ws"></span> </pre>
<pre class="line before"><span class="ws">    </span>def get_proper(self, config=None) -&gt; Tuple['Proper', 'Proper']:</pre>
<pre class="line current"><span class="ws">        </span>proper: Tuple['Proper', 'Proper'] = ProperParser(self.id, self.lang, config).parse()</pre>
<pre class="line after"><span class="ws">        </span>if re.match(PATTERN_POST_EPIPHANY_SUNDAY, self.id) and self.date.month &gt;= 10:</pre>
<pre class="line after"><span class="ws">            </span>self._adjust_sunday_shifted_from_post_epiphany(proper)</pre>
<pre class="line after"><span class="ws">        </span>return proper</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def has_proper(self) -&gt; bool:</pre></div>
</div>

<li><div class="frame" id="frame-4347509200">
  <h4>File <cite class="filename">"/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py"</cite>,
      line <em class="line">47</em>,
      in <code class="function">parse</code></h4>
  <div class="source "><pre class="line before"><span class="ws">        </span>partial_path = self._get_partial_path()</pre>
<pre class="line before"><span class="ws">        </span>try:</pre>
<pre class="line before"><span class="ws">            </span>proper_vernacular: Proper = self._parse_proper_source(partial_path, self.lang)</pre>
<pre class="line before"><span class="ws">            </span>proper_latin: Proper = self._parse_proper_source(partial_path, LANGUAGE_LATIN)</pre>
<pre class="line before"><span class="ws">        </span>except FileNotFoundError as e:</pre>
<pre class="line current"><span class="ws">            </span>raise ProperNotFound(f'Proper `{e.filename}` not found.')</pre>
<pre class="line after"><span class="ws">        </span>return proper_vernacular, proper_latin</pre>
<pre class="line after"><span class="ws"></span> </pre>
<pre class="line after"><span class="ws">    </span>def _parse_proper_source(self, partial_path: str, lang, lookup_section=None) -&gt; Proper:</pre>
<pre class="line after"><span class="ws">        </span>&quot;&quot;&quot;</pre>
<pre class="line after"><span class="ws">        </span>Read the file and organize the content as a list of dictionaries</pre></div>
</div>
</ul>
  <blockquote>exceptions.ProperNotFound: Proper `/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt` not found.</blockquote>
</div>

<div class="plain">
  <form action="/?__debugger__=yes&amp;cmd=paste" method="post">
    <p>
      <input type="hidden" name="language" value="pytb">
      This is the Copy/Paste friendly version of the traceback.  <span
      class="pastemessage">You can also paste this traceback into
      a <a href="https://gist.github.com/">gist</a>:
      <input type="submit" value="create paste"></span>
    </p>
    <textarea cols="50" rows="10" name="code" readonly>Traceback (most recent call last):
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py&quot;, line 44, in parse
    proper_vernacular: Proper = self._parse_proper_source(partial_path, self.lang)
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py&quot;, line 65, in _parse_proper_source
    proper.merge(self._parse_source(nested_path, lang=lang))
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py&quot;, line 94, in _parse_source
    with open(full_path) as fh:
FileNotFoundError: [Errno 2] No such file or directory: '/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 2449, in wsgi_app
    response = self.handle_exception(e)
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py&quot;, line 39, in reraise
    raise value
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File &quot;/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py&quot;, line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/apiv2.py&quot;, line 38, in v2_date
    return jsonify(format_propers(day))
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/utils.py&quot;, line 31, in format_propers
    propers = day.get_proper()
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py&quot;, line 185, in get_proper
    celebration_propers = self._calculate_proper(self.celebration)
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py&quot;, line 210, in _calculate_proper
    retval.append(observance.get_proper(proper_config))
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py&quot;, line 76, in get_proper
    proper: Tuple['Proper', 'Proper'] = ProperParser(self.id, self.lang, config).parse()
  File &quot;/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py&quot;, line 47, in parse
    raise ProperNotFound(f'Proper `{e.filename}` not found.')
exceptions.ProperNotFound: Proper `/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt` not found.</textarea>
  </form>
</div>
<div class="explanation">
  The debugger caught an exception in your WSGI application.  You can now
  look at the traceback which led to the error.  <span class="nojavascript">
  If you enable JavaScript you can also use additional features such as code
  execution (if the evalex feature is enabled), automatic pasting of the
  exceptions and much more.</span>
</div>
      <div class="footer">
        Brought to you by <strong class="arthur">DON'T PANIC</strong>, your
        friendly Werkzeug powered traceback interpreter.
      </div>
    </div>

    <div class="pin-prompt">
      <div class="inner">
        <h3>Console Locked</h3>
        <p>
          The console is locked and needs to be unlocked by entering the PIN.
          You can find the PIN printed out on the standard output of your
          shell that runs the server.
        <form>
          <p>PIN:
            <input type=text name=pin size=14>
            <input type=submit name=btn value="Confirm Pin">
        </form>
      </div>
    </div>
  </body>
</html>

<!--

Traceback (most recent call last):
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py", line 44, in parse
    proper_vernacular: Proper = self._parse_proper_source(partial_path, self.lang)
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py", line 65, in _parse_proper_source
    proper.merge(self._parse_source(nested_path, lang=lang))
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py", line 94, in _parse_source
    with open(full_path) as fh:
FileNotFoundError: [Errno 2] No such file or directory: '/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 2463, in __call__
    return self.wsgi_app(environ, start_response)
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 2449, in wsgi_app
    response = self.handle_exception(e)
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 1866, in handle_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 2446, in wsgi_app
    response = self.full_dispatch_request()
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 1951, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 1820, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/_compat.py", line 39, in reraise
    raise value
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 1949, in full_dispatch_request
    rv = self.dispatch_request()
  File "/Users/frades/.local/share/virtualenvs/Missal1962-8TPiezI6/lib/python3.7/site-packages/flask/app.py", line 1935, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/apiv2.py", line 38, in v2_date
    return jsonify(format_propers(day))
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/utils.py", line 31, in format_propers
    propers = day.get_proper()
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py", line 185, in get_proper
    celebration_propers = self._calculate_proper(self.celebration)
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py", line 210, in _calculate_proper
    retval.append(observance.get_proper(proper_config))
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/kalendar/models.py", line 76, in get_proper
    proper: Tuple['Proper', 'Proper'] = ProperParser(self.id, self.lang, config).parse()
  File "/Users/frades/code/tesourofieis/Missal1962/missal1962/propers/parser.py", line 47, in parse
    raise ProperNotFound(f'Proper `{e.filename}` not found.')
exceptions.ProperNotFound: Proper `/Users/frades/code/tesourofieis/Missal1962/missal1962/constants/../../resources/divinum-officium/web/www/missa/Portugues/Commune/Quadp2-0.txt` not found.

-->
